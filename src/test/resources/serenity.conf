# various settings are described here https://serenity-bdd.github.io/theserenitybook/latest/serenity-system-properties.html
# and also in template_serenity.properties. Use serenity.properties to set values locally (to override these settings)

# true / false, when false, you can see test execution of web based app
headless.mode = true

environments {
    default {
        alza.app.url = "https://www.alza.cz/EN/"
    }
    at {
        alza.app.url = ""
    }
    prod {
        alza.app.url = "https://www.alza.cz/EN/"
    }

}

webdriver {

  ## What browser do you want your tests to run in, for example firefox, chrome, phantomjs or iexplorer.
  ## You can also use the driver property as a shortcut.
  driver = chrome

  ## Set to false if you don?t want Serenity to automatically download driver binaries for local runs.
  autodownload = true

  # possible fix for timeout in webdriver when it waits up to 12 minutes
  chrome.silentOutput = true

  timeouts {
    # How long webdriver waits for elements to appear by default, in milliseconds.
    implicitlywait = 20000

    # make Serenity wait for an element that is already present on the page to become visible or enabled
    fluentwait = 10000

  }

}

#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches = """
            --allow-cross-origin-auth-prompt;
            --disable-default-apps;
            --disable-dev-shm-usage;
            --disable-extensions-file-access-check;
            --disable-gpu;
            --disable-infobars;
            --disable-popup-blocking;
            --ignore-certificate-errors;
            --incognito;
            --no-sandbox;
            --start-maximized;
            --test-type;
            --user-agent=Chrome/107.0.0.0;
            --window-position=0,0;
            --window-size=1600,1080;
           """
#--user-agent override default user-agent string, as in headless mode it appends HeadlessChrome/107.0.5304.107 to it, which can be captured by reCaptcha
serenity {
    ## Set this property to have more finer control on how screenshots are taken, default is serenity.take.screenshots=BEFORE_AND_AFTER_EACH_STEP
    ## This property can take the following values:
    ## FOR_EACH_ACTION : Saves a screenshot at every web element action (like click(), typeAndEnter(), type(), typeAndTab() etc.).
    ## BEFORE_AND_AFTER_EACH_STEP : Saves a screenshot before and after every step.
    ## AFTER_EACH_STEP : Saves a screenshot after every step
    ## FOR_FAILURES : Saves screenshots only for failing steps.
    ## DISABLED : Doesn't save screenshots for any steps.
    take.screenshots = FOR_FAILURES

    ## Indicate when a browser should be restarted during a test run. Can be one of: scenario, story, feature, never
    restart.browser.for.each = feature

    ## Set this property to true to save the HTML source code of the screenshot web pages. This is set to false by default.
    store.html.source = true

    # Property for providing level of serenity actions, results, etc.
    #
    # QUIET   No Serenity BDD logging at all
    # NORMAL  Log the start and end of com.teliasonera.ta_product_manager_config.tests
    # VERBOSE Log the start and end of com.teliasonera.ta_product_manager_config.tests and test com.teliasonera.ta_product_manager_config.steps, default value
    logging = NORMAL

}
